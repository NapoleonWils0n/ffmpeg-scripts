#!/bin/sh

# ffmpeg loudnorm

# script usage
usage()
{
  echo "$(basename "$0") -i infile.(mp4|mkv|mov|m4v|aac|m4a|wav|mp3)"
  exit 2
}

# error messages
NOTFILE_ERR='not a file'
INVALID_OPT_ERR='Invalid option:'
REQ_ARG_ERR='requires an argument'
WRONG_ARGS_ERR='wrong number of arguments passed to script'
ARGS_ERR='incorrect arguments passed to script'
FILE_EXT_ERR='has the wrong file extension'
NOT_MEDIA_FILE_ERR='is not a media file'

# number of args passed to script, needs to be stored before getopts
if [ $# -gt 0 ]; then
    firstarg="$1"
    args="$#"
else
   { echo "${WRONG_ARGS_ERR}" && usage; }
fi

# getopts and check if input a file
while getopts ':i:h' opt
do
  case ${opt} in
     i) infile="${OPTARG}"
	[ -f "${infile}" ] || { echo "${infile} ${NOTFILE_ERR}" && usage; };;
     h) usage;;
     \?) echo "${INVALID_OPT_ERR} ${OPTARG}" 1>&2 && usage;;
     :) echo "${INVALID_OPT_ERR} ${OPTARG} ${REQ_ARG_ERR}" 1>&2 && usage;;
  esac
done
shift $((OPTIND-1))

# check arguments
if [ "${args}" -eq 2 ]; then
   {
   [ "${firstarg}" = '-i' ] && \
   [ -f "${infile}" ]
   } || { echo "${ARGS_ERR}" && usage; }
else
   { echo "${WRONG_ARGS_ERR}" && usage; }
fi

# infile and file extension
infile_ext="${infile##*.}"

# file extension regular expressions for case statement
mp4='[Mm][Pp]4'
mkv='[Mm][Kk][Vv]'
mov='[Mm][[Oo][Vv]'
m4v='[Mm]4[Vv]'
aac='[Aa][Aa][Cc]'
m4a='[Mm]4[Aa]'
wav='[Ww][Aa][Vv]'
mp3='[Mm][Pp]3'

# run the audio or video function based on the file extension
case "${infile_ext}" in
    ${mp4}|${mkv}|${mov}|${m4v}| \
    ${aac}|${m4a}|${wav}|${mp3});;
    *) { echo "${infile} ${FILE_EXT_ERR}" && usage; };;
esac

# file command check input file mime type
filetype="$(file --mime-type -b "${infile}")"

# audio and video mimetypes
mov_mime='video/quicktime'
mkv_mime='video/x-matroska'
mp4_mime='video/mp4'
m4v_mime='video/x-m4v'
wav_mime='audio/x-wav'
audio_mime='audio/mpeg'
aac_mime='audio/x-hx-aac-adts'

# ffmpeg loudnorm get stats from file
normalize () {
    ffmpeg \
    -hide_banner \
    -i "${infile}" \
    -af "loudnorm=I=-16:dual_mono=true:TP=-1.5:LRA=11:print_format=summary" \
    -f null -
}

# check the files mime type
case "${filetype}" in
    ${mov_mime}|${mkv_mime}|${mp4_mime}|${m4v_mime}| \
    ${wav_mime}|${audio_mime}|${aac_mime}) normalize "${infile}";;
    *) { echo "${infile} ${NOT_MEDIA_FILE_ERR}" && usage; };;
esac
