#!/bin/sh

#===============================================================================
# vid2gif
# convert a video into a gif animation
#===============================================================================

# dependencies:
# ffmpeg ffprobe cut

#===============================================================================
# script usage
#===============================================================================

usage()
{
# if argument passed to function echo it
[ -z "${1}" ] || echo "! ${1}"
# display help
echo "\
# convert a video into a gif animation

$(basename "$0") -s 00:00:00.000 -i input.(mp4|mov|mkv|m4v) -t 00:00:00.000 -f [00] -w [0000] -o output.gif
-s 00:00:00.000 : start time
-i input.(mp4|mov|mkv|m4v)
-t 00:00:00.000 : number of seconds after start time
-f [00]         : framerate
-w [0000]       : width
-o output.gif   : optional argument 
# if option not provided defaults input-name-gif-date-time.gif"
exit 2
}


#===============================================================================
# error messages
#===============================================================================

INVALID_OPT_ERR='Invalid option:'
REQ_ARG_ERR='requires an argument'
WRONG_ARGS_ERR='wrong number of arguments passed to script'


#===============================================================================
# check the number of arguments passed to the script
#===============================================================================

[ $# -gt 0 ] || usage "${WRONG_ARGS_ERR}"


#===============================================================================
# getopts check the options passed to the script
#===============================================================================

while getopts ':s:i:t:f:w:o:h' opt
do
  case ${opt} in
     s) start="${OPTARG}";;
     i) infile="${OPTARG}";;
     t) end="${OPTARG}";;
     f) framerate="${OPTARG}";;
     w) width="${OPTARG}";;
     h) usage;;
     o) outfile="${OPTARG}";;
     \?) usage "${INVALID_OPT_ERR} ${OPTARG}" 1>&2;;
     :) usage "${INVALID_OPT_ERR} ${OPTARG} ${REQ_ARG_ERR}" 1>&2;;
  esac
done
shift $((OPTIND-1))


#===============================================================================
# variables
#===============================================================================

# input name
infile_nopath="${infile##*/}"
infile_name="${infile_nopath%.*}"

# defaults for variables if not defined
start_default='00:00:00'
end_default=$(ffprobe -v error -sexagesimal -show_entries format=duration -of default=noprint_wrappers=1:nokey=1 "$infile" | cut -d\. -f1)
framerate_default='15'
width_default='320'
outfile_default="${infile_name}-gif-$(date +"%Y-%m-%d-%H-%M-%S").gif"


#===============================================================================
# functions
#===============================================================================

# create gif function
create_gif () {
    ffmpeg \
    -hide_banner \
    -stats -v panic \
    -ss "${start:=${start_default}}" \
    -i "${infile}" \
    -t "${end:=${end_default}}" \
    -filter_complex "[0:v] fps=${framerate:=${framerate_default}},scale=${width:=${width_default}}:-1:flags=lanczos,split [a][b];[a] palettegen [p];[b][p] paletteuse" \
    "${outfile:=${outfile_default}}"
}

# run the create_gif function
create_gif "${infile}"
