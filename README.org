#+STARTUP: content
#+OPTIONS: num:nil author:nil

* ffmpeg scripts

A collection of ffmpeg shell scripts

+ combine-clips
+ ebu-meter
+ fade-clip
+ fade-normalize
+ fade-title
+ loudnorm
+ normalize
+ subtitle-add
+ trim-clip
+ waveform

** audio-silence

audio-silence add silent audio to a video clip

+ script usage

#+BEGIN_SRC sh
audio-silence -i infile.(mp4|mkv|mov|m4v) -c (mono|stereo) -r (44100|48000)"
#+END_SRC

** combine-clips

combine video and audio files into new clip

+ script usage

#+BEGIN_SRC sh
combine-clip -v video.(mp4|mov|mkv|m4v) -a audio.(m4a|aac|wav|mp3)
#+END_SRC

** correct-clip

+ curves code based on:
[[https://video.stackexchange.com/questions/16352/converting-gimp-curves-files-to-photoshop-acv-for-ffmpeg/20005#20005][converting gimp curves files for ffmpeg]]

correct a video clip by using a gimp curve converted into a ffmpeg curves filter command,
to adjust the levels and white balance

+ requires a curve file created with the following script
[[https://github.com/NapoleonWils0n/curve2ffmpeg][curve2ffmpeg]]

+ script usage

#+BEGIN_SRC sh
correct-clip -i infile.(mp4|mkv|mov|m4v) -c curve.txt
#+END_SRC

** ebu-meter

ffplay ebu meter

+ script usage

#+BEGIN_SRC sh
ebu-meter -i infile.(mp4|mov|mkv|m4v|m4a|aac|wav|mp3)
#+END_SRC

** extract-frame

extract a frame from a video and save as a png image

+ script usage

#+BEGIN_SRC sh
extract-frame -i infile.(mp4|mov|mkv|m4v) -s 00:00:00
#+END_SRC

** fade-clip

fade video and audio in and out

+ script usage

#+BEGIN_SRC sh
fade-clip -i video.(mp4|mkv|mov|m4v) -d (0.[0-9]|1)
#+END_SRC

+ -i video.(mp4|mkv|mov|m4v)
+ -d = duration from 0.1 to 1

** fade-normalize

fade video and audio in and out and normalize

+ curves code based on:
[[https://video.stackexchange.com/questions/16352/converting-gimp-curves-files-to-photoshop-acv-for-ffmpeg/20005#20005][converting gimp curves files for ffmpeg]]

correct a video clip by using a gimp curve converted into a ffmpeg curves filter command,
to adjust the levels and white balance

+ requires a curve file created with the following script
[[https://github.com/NapoleonWils0n/curve2ffmpeg][curve2ffmpeg]]

+ script usage

#+BEGIN_SRC sh
fade-normalize -i video.(mp4|mkv|mov|m4v) -d (0.[0-9]|1) -c curve.txt
#+END_SRC

+ -d = duration from 0.1 to 1
+ -c curve.txt

** fade-title

fade video and audio in and out, 
normalize and create vide title from filename

+ curves code based on:
[[https://video.stackexchange.com/questions/16352/converting-gimp-curves-files-to-photoshop-acv-for-ffmpeg/20005#20005][converting gimp curves files for ffmpeg]]

correct a video clip by using a gimp curve converted into a ffmpeg curves filter command,
to adjust the levels and white balance

+ requires a curve file created with the following script
[[https://github.com/NapoleonWils0n/curve2ffmpeg][curve2ffmpeg]]

+ script usage

#+BEGIN_SRC sh
fade-title -i infile.(mp4|mkv|mov|m4v) -d (0.[0-9]|1) -s 000 -e 000 -c curve.txt
#+END_SRC

+ -i video.(mp4|mkv|mov|m4v)
+ -d = duration from 0.1 to 1
+ -s = title start
+ -e = title end
+ -c = curve.txt

** loudnorm

ffmpeg loudnorm 

+ script usage

#+BEGIN_SRC sh
loudnorm -i infile.(mkv|mp4|mov|m4v|m4a|aac|wav|mp3)
#+END_SRC

** img2video

convert an image to a video file

+ script usage

#+BEGIN_SRC sh
img2video -i infile.(png|jpg|jpeg) -d (000)
#+END_SRC

** normalize

normalize audio levels

+ script usage

#+BEGIN_SRC sh
normalize -i infile.(mp4|mkv|mov|m4v|aac|m4a|wav|mp3)
#+END_SRC

** overlay-clip

overlay one video clip on top of another video clip

+ script usage

#+BEGIN_SRC sh
overlay-clip -i infile.(mp4|mkv|mov|m4v) -o infile.(mp4|mkv|mov|m4v) -p [0-999]"
#+END_SRC

+ -p = position to overlay the clip from in seconds

** subtitle-add

add subtitles to a video file

+ script usage

#+BEGIN_SRC sh
subtitle-add -i video.(mp4|mov|mkv|m4v) -s subtitle.srt
#+END_SRC

** trim-clip

trim video clip

+ script usage

#+BEGIN_SRC sh
trim-clip -s 00:00:00 -i infile.(mp4|mov|mkv|m4v|aac|m4a|wav|mp3) -t 00:00:00
#+END_SRC

+ -i = infile.(mp4|mov|mkv|m4v|aac|m4a|wav|mp3)
+ -s = start time
+ -t = number of seconds after start time

** waveform

create a waveform from an audio or video file and save as a png

+ script usage

#+BEGIN_SRC sh
waveform -i infile.(mp4|mkv|mov|m4v|wav|aac|m4a|mp3)
#+END_SRC

** xfade-clips

cross fade 2 video clips with either a 1 or 2 second cross fade
the videos must have the same codecs, size and frame rate
+ script usage

#+BEGIN_SRC sh
xfade-clips -a clip1.(mp4|mkv|mov|m4v) -b clip2.(mp4|mkv|mov|m4v) -d (1|2)
#+END_SRC

+ -a clip1.(mp4|mkv|mov|m4v)
+ -b clip2.(mp4|mkv|mov|m4v)
+ -d = duration either 1 to 2

** zoompan

convert a image to video and apply ken burns style zoom into center

+ script usage

#+BEGIN_SRC sh
zoompan -i infile.(png|jpg|jpeg) -d (000) -z (in|out) -p (tl|c|tc|tr|bl|br)"
#+END_SRC

+ -i = infile.(png|jpg|jpeg)
+ -d = duration : from 1-999
+ -z = zoom : in or out
+ -p = position : zoom to location listed below

#+BEGIN_SRC sh
+------------------------------+
+tl            tc            tr+
+                              +        
+              c               +
+                              +
+bl                          br+
+------------------------------+
#+END_SRC
