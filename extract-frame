#!/bin/sh

# extract a frame froma a video as a png file

# script usage
usage()
{
  echo "$(basename "$0") -i infile.(mp4|mov|mkv|m4v) -s 00:00:00"
  exit 2
}

# error messages
HOME_ERR='HOME directory not set or null'
NOTFILE_ERR='not a file'
INVALID_OPT_ERR='Invalid option:'
REQ_ARG_ERR='requires an argument'
WRONG_ARGS_ERR='wrong number of arguments passed to script'
ARGS_ERR='incorrect arguments passed to script'
FILE_EXT_ERR='has the wrong file extension'
NOT_MEDIA_FILE_ERR='is not a media file'

# number of args passed to script, needs to be stored before getopts
if [ $# -gt 0 ]; then
    firstarg="$1"
    thirdarg="$3"
    args="$#"
else
   { echo "${WRONG_ARGS_ERR}" && usage; }
fi

# getopts and check if input a file
while getopts ':i:s:h' opt
do
  case ${opt} in
     i) infile="${OPTARG}"
	[ -f "${infile}" ] || { echo "${infile} ${NOTFILE_ERR}" && usage; };;
     s) seconds="${OPTARG}";;
     h) usage;;
     \?) echo "${INVALID_OPT_ERR} ${OPTARG}" 1>&2 && usage;;
     :) echo "${INVALID_OPT_ERR} ${OPTARG} ${REQ_ARG_ERR}" 1>&2 && usage;;
  esac
done
shift $((OPTIND-1))

# timecode - match 00:00:00
timecode='^[0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}$'

# check arguments
if [ "${args}" -eq 4 ]; then
   {
   [ "${firstarg}" = '-i' ] && \
   [ -f "${infile}" ] && \
   [ "${thirdarg}" = '-s' ] && \
   expr "${seconds}" : "${timecode}" 1>/dev/null
   } || { echo "${ARGS_ERR}" && usage; }
else
   { echo "${WRONG_ARGS_ERR}" && usage; }
fi

# infile, infile name and extension
infile_nopath="${infile##*/}"
infile_name="${infile_nopath%.*}"
infile_ext="${infile##*.}"

# file extension regular expressions for case statement
mp4='[Mm][Pp]4'
mkv='[Mm][Kk][Vv]'
mov='[Mm][[Oo][Vv]'
m4v='[Mm]4[Vv]'

# check the file extension before passing to the file command
case "${infile_ext}" in
    ${mp4}|${mkv}|${mov}|${m4v});;
    *) { echo "${infile} ${FILE_EXT_ERR}" && usage; };;
esac

# outfile file recording destination
outfile="${HOME:?${HOME_ERR}}/Desktop/${infile_name}-frame-$(date +"%Y-%m-%d-%H-%M-%S").png"

# file command check input file mime type
filetype="$(file --mime-type -b "${infile}")"

# video mimetypes
mov_mime='video/quicktime'
mkv_mime='video/x-matroska'
mp4_mime='video/mp4'
m4v_mime='video/x-m4v'

# image to video function
extract () {
  ffmpeg \
  -hide_banner \
  -stats -v panic \
  -ss "${seconds}" \
  -i "${infile}" \
  -q:v 2 -f image2 \
  -vframes 1 \
  "${outfile}"
}

# check the files mime type
case "${filetype}" in
    ${mov_mime}|${mkv_mime}|${mp4_mime}|${m4v_mime}) extract "${infile}";;
    *) { echo "${infile} ${NOT_MEDIA_FILE_ERR}" && usage; };;
esac
