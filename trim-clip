#!/bin/sh

# trim video clip

# script usage
script_usage=$(printf "%s\n%s\n" "$(basename "$0") -ss 00:00:00 -i video.(mp4|mov|mkv|m4v) -t 00:00:00")

# timecode
timecode='^[0-9]{2}:[0-9]{2}:[0-9]{2}$'

# check arguments
if [ $# -eq 6 ]; then
   {
   [ "$1" = '-ss' ] && \
   printf "%s\n" "$2" | grep -Eo "$timecode" 1>/dev/null && \
   [ "$3" = '-i' ] && \
   [ -f "$4" ] && \
   [ "$5" = '-t' ] && \
   printf "%s\n" "$6" | grep -Eo "$timecode" 1>/dev/null
   } || { printf "%s\n" "$script_usage" && exit; }
else
   { printf "%s\n" "$script_usage" && exit; }
fi

# variables
start="$2"
video="$4"
end="$6"

# infile name
infile_nopath="${video##*/}"
infile_name="${infile_nopath%.*}"

# video file destination
videofile="$HOME/Desktop/${infile_name}-trimmed-$(date +"%Y-%m-%d-%H-%M-%S").mp4"

# get video extension
v_ext="${video##*.}"

# save file extension as a lowercase variable for the case statement
video_ext="$(printf "%s\n" "$v_ext" | tr '[:upper:]' '[:lower:]')"

# trim clip
trim () {
    ffmpeg \
    -hide_banner \
    -stats -v panic \
    -ss "$start" \
    -i "$video" \
    -t "$end" \
    -c:a copy \
    -c:v libx264 -profile:v high \
    -pix_fmt yuv420p -movflags +faststart \
    -f mp4 \
    "$videofile"
}

# check video file extension
case "$video_ext" in
  mkv|mp4|mov|m4v) trim "$video";;
  *) { printf "%s\n" "$script_usage" && exit; };;
esac
