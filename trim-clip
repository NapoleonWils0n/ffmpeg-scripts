#!/bin/sh

# trim video or audio clip

# script usage
usage()
{
# if argument passed to function echo it
[ -z "${1}" ] || echo "! ${1}"
# display help
echo "\
# trim video or audio clip

$(basename "$0") -s 00:00:00 -i infile.(mp4|mov|mkv|m4v|aac|m4a|wav|mp3) -t 00:00:00 -o outfile.(mp4|wav)
-s 00:00:00 : start time
-i infile.(mp4|mov|mkv|m4v|aac|m4a|wav|mp3)
-t 00:00:00 : number of seconds after start time
-o outfile.(mp4|wav) :optional agument 
# if option not provided defaults infile_name-trimmed-date-time.(mp4|wav)"
exit 2
}

# error messages
NOTFILE_ERR='not a file'
INVALID_OPT_ERR='Invalid option:'
REQ_ARG_ERR='requires an argument'
WRONG_ARGS_ERR='wrong number of arguments passed to script'
NOT_MEDIA_FILE_ERR='is not a media file'

# if script is run arguments pass and check the options with getopts,
# else display script usage and exit
[ $# -gt 0 ] || usage "${WRONG_ARGS_ERR}"

# timecode - match 00:00:00
timecode='^[0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}$'

# getopts and check if input a file
while getopts ':s:i:t:h' opt
do
  case ${opt} in
     s) start="${OPTARG}"
         expr "${start}" : "${timecode}" 1>/dev/null;;
     i) infile="${OPTARG}"
	[ -f "${infile}" ] || usage "${infile} ${NOTFILE_ERR}";;
     t) end="${OPTARG}"
        expr "${end}" : "${timecode}" 1>/dev/null;;
     h) usage;;
     \?) usage "${INVALID_OPT_ERR} ${OPTARG}" 1>&2;;
     :) usage "${INVALID_OPT_ERR} ${OPTARG} ${REQ_ARG_ERR}" 1>&2;;
  esac
done
shift $((OPTIND-1))

# infile name
infile_nopath="${infile##*/}"
infile_name="${infile_nopath%.*}"

# file command check input file mime type
filetype="$(file --mime-type -b "${infile}")"

# video mimetypes
mov_mime='video/quicktime'
mkv_mime='video/x-matroska'
mp4_mime='video/mp4'
m4v_mime='video/x-m4v'
wav_mime='audio/x-wav'
audio_mime='audio/mpeg'
aac_mime='audio/x-hx-aac-adts'

# defaults for variables if not defined
videofile_default="${infile_name}-trimmed-$(date +"%Y-%m-%d-%H-%M-%S").mp4"
audiofile_default="${infile_name}-trimmed-$(date +"%Y-%m-%d-%H-%M-%S").wav"

# trim video clip
trim_video () {
    ffmpeg \
    -hide_banner \
    -stats -v panic \
    -ss "${start}" \
    -i "${infile}" \
    -t "${end}" \
    -c:a aac \
    -c:v libx264 -profile:v high \
    -pix_fmt yuv420p -movflags +faststart \
    -f mp4 \
    "${outfile:=${videofile_default}}"
}

# trim audio clip
trim_audio () {
    ffmpeg \
    -hide_banner \
    -stats -v panic \
    -ss "${start}" \
    -i "${infile}" \
    -t "${end}" \
    -c:a pcm_s16le \
    -f wav \
    "${outfile:=${audiofile_default}}"
}

# check the files mime type
case "${filetype}" in
    ${mov_mime}|${mkv_mime}|${mp4_mime}|${m4v_mime}) trim_video "${infile}";;
    ${wav_mime}|${audio_mime}|${aac_mime}) trim_audio "${infile}";;
    *) usage "${infile} ${NOT_MEDIA_FILE_ERR}";;
esac
